{"version":3,"file":"static/js/713.7d14f1f3.chunk.js","mappings":"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","sources":["components/contactList/ContactList.styled.js","redux/contacts/selectors.js","components/contactList/ContactList.jsx","components/contactForm/ContactForm.styled.js","components/contactForm/ContactForm.jsx","components/filter/Filter.styled.js","components/filter/Filter.jsx","components/modal/Modal.styled.js","components/modal/Modal.jsx","components/contactsGroup/ContactsGroup.styled.js","components/contactsGroup/ContactsGroup.jsx","pages/ContactPage.js"],"sourcesContent":["import styled from 'styled-components';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nconst Li = styled.li`\r\n  display: grid;\r\n  grid-template-columns: 3fr 40px 40px;\r\n  margin-bottom: 16px;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  padding-left: 9px;\r\n  background-color: lavender;\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  margin: 0;\r\n  padding-left: 0;\r\n`;\r\n\r\nconst Paragraph = styled.p`\r\n  margin: 0;\r\n  font-size: 18px;\r\n  margin-right: 20px;\r\n`;\r\n\r\nconst DeleteButton = styled(DeleteIcon)`\r\n  &:hover {\r\n    scale: 1.2;\r\n  }\r\n`;\r\n\r\nconst EditButton = styled(EditIcon)`\r\n  &:hover {\r\n    scale: 1.2;\r\n  }\r\n`;\r\n\r\nexport { Li, Ul, Paragraph, DeleteButton, EditButton };\r\n","export const selectContacts = state => state.contacts.items;\r\n\r\nexport const selectLoading = state => state.contacts.isLoading;\r\n\r\nexport const selectError = state => state.contacts.error;\r\n\r\nexport const selectFilter = state => state.filter;\r\n// export const getContacts = state => state.contacts.items;\r\n\r\n// export const getIsLoading = state => state.contacts.isLoading;\r\n\r\n// export const getError = state => state.contacts.error;\r\n\r\n// export const getFilter = state => state.filter;\r\n","import PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport {\r\n  Li,\r\n  Ul,\r\n  Paragraph,\r\n  DeleteButton,\r\n  EditButton,\r\n} from './ContactList.styled';\r\nimport { selectContacts, selectFilter } from '../../redux/contacts/selectors';\r\n// import { getContacts, getFilter } from '../../redux/selectors';\r\nimport { deleteContact } from '../../redux/contacts/operations';\r\n\r\nexport const ContactList = props => {\r\n  const dispatch = useDispatch();\r\n  const { onContactEdit } = props;\r\n\r\n  const contacts = useSelector(selectContacts);\r\n  const filterData = useSelector(selectFilter);\r\n  const filter = filterData?.filter ?? '';\r\n  return (\r\n    <Ul>\r\n      {contacts\r\n        .filter(\r\n          contact =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase()) ||\r\n            contact.number.includes(filter)\r\n        )\r\n        .map(contact => (\r\n          <Li key={contact.id}>\r\n            <Paragraph>{`${contact.name}: ${contact.number}`}</Paragraph>\r\n            <Tooltip title=\"Edit\">\r\n              <IconButton\r\n                type=\"button\"\r\n                onClick={() => onContactEdit(contact.id)}\r\n              >\r\n                <EditButton color=\"primary\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip title=\"Delete\">\r\n              <IconButton\r\n                type=\"button\"\r\n                onClick={() => dispatch(deleteContact(contact.id))}\r\n              >\r\n                <DeleteButton color=\"primary\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Li>\r\n        ))}\r\n    </Ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  onContactEdit: PropTypes.func.isRequired,\r\n};\r\n\r\n// export default ContactList;\r\n","import styled from 'styled-components';\r\nimport { Form, Field } from 'formik';\r\n\r\nconst CompleteForm = styled(Form)`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst Label = styled.label`\r\n  color: #2a2a2a;\r\n  display: grid;\r\n  font-size: 20px;\r\n  justify-content: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Input = styled(Field)`\r\n  color: #2a2a2a;\r\n  font-size: 18px;\r\n  border-radius: 4px;\r\n  border-image: linear-gradient(to right, grey, silver) 1;\r\n  padding: 5px;\r\n  &:focus {\r\n    outline-color: #2196f3;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background-color: lavender;\r\n  border-radius: 4px;\r\n  border: none;\r\n  box-shadow: 0px 3px 3px rgb(0 0 0 / 30%), 2px 0px 2px rgb(0 0 0 / 14%),\r\n    0px 0px 3px rgb(0 0 0 / 20%);\r\n  color: #2a2a2a;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  margin-left: 110px;\r\n  margin-right: 110px;\r\n  padding: 8px;\r\n  border-image: linear-gradient(to left, #743ad5, #d53a9d);\r\n  &:hover {\r\n    scale: 1.1;\r\n    transition: scale 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n`;\r\n\r\nexport { CompleteForm, Label, Input, Button };\r\n","import PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { CompleteForm, Label, Input, Button } from './ContactForm.styled';\r\n\r\nconst schema = yup.object().shape({\r\n  name: yup.string().required(),\r\n  number: yup.string().required(),\r\n});\r\n\r\nconst ContactForm = props => {\r\n  const { handleSubmit, contact } = props;\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        name: contact?.name || '',\r\n        number: contact?.number || '',\r\n      }}\r\n      onSubmit={handleSubmit}\r\n      validationSchema={schema}\r\n    >\r\n      <CompleteForm autoComplete=\"off\">\r\n        <Label htmlFor=\"name\">\r\n          Name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </Label>\r\n        <Label htmlFor=\"number\">\r\n          Number\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{0,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </Label>\r\n        <Button type=\"submit\">\r\n          {contact?.name ? 'Save contact' : 'Add contact'}\r\n        </Button>\r\n      </CompleteForm>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  contact: PropTypes.object,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n  color: #2a2a2a;\r\n  font-size: 18px;\r\n  margin-bottom: 20px;\r\n  margin-left: 60px;\r\n  border-radius: 4px;\r\n  border-image: linear-gradient(to right, grey, silver) 1;\r\n  padding: 5px;\r\n  &:focus {\r\n    outline-color: #2196f3;\r\n  }\r\n`;\r\n\r\nconst FindName = styled.div`\r\n  font-size: 22px;\r\n`;\r\n\r\nexport { Input, FindName };\r\n","import { useDispatch } from 'react-redux';\r\nimport { setFilter } from '../../redux/contacts/filterSlice';\r\nimport { Input, FindName } from './Filter.styled';\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <>\r\n      <FindName>Find contact by name or number</FindName>\r\n      <Input\r\n        type=\"text\"\r\n        onChange={event => dispatch(setFilter(event.target.value))}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from 'styled-components';\r\n\r\nconst Backdrop = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  height: 100vh;\r\n  left: 0;\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100vw;\r\n`;\r\n\r\nconst ModalContent = styled.div`\r\n  display: grid;\r\n  background-color: #fff;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 2px 1px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\r\n  left: 50%;\r\n  min-height: 250px;\r\n  padding: 12px;\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 350px;\r\n`;\r\n\r\nconst ModalPhoneBook = styled.div`\r\n  align-items: flex-start;\r\n  display: inline-grid;\r\n  justify-content: center;\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport { Backdrop, ModalContent, ModalPhoneBook };\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport {\r\n    Backdrop, \r\n    ModalContent,\r\n    ModalPhoneBook\r\n } from './Modal.styled'\r\n \r\n const modalRoot = document.querySelector('#modal-root');\r\n\r\nfunction Modal (props) {\r\n  useEffect(()=> {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  const handleKeyDown = e => {\r\n    if(e.code === 'Escape'){\r\n      props.onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = event =>{\r\n   if(event.currentTarget === event.target){\r\n     props.onClose();\r\n   }\r\n  };\r\n     return createPortal(\r\n       <Backdrop onClick={handleBackdropClick}>\r\n         <ModalContent>\r\n           <ModalPhoneBook>{props.children}</ModalPhoneBook>\r\n         </ModalContent>\r\n       </Backdrop>, \r\n       modalRoot,\r\n     );\r\n }\r\n\r\n export default Modal;","import styled from 'styled-components';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst WrapperTitle = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst TitleMain = styled.h1`\r\n  font-size: 40px;\r\n  margin-bottom: 20px;\r\n  margin-top: 0;\r\n`;\r\n\r\nconst TitleList = styled.h2`\r\n  font-size: 40px;\r\n  margin-bottom: 20px;\r\n  margin-top: 0;\r\n`;\r\n\r\nconst CloseButton = styled(CloseIcon)`\r\n  grid-template-columns: 40px;\r\n  justify-content: end;\r\n  position: absolute;\r\n  right: 12px;\r\n  top: 10px;\r\n  padding: 5px;\r\n  border-radius: 50%;\r\n  background-color: mintcream;\r\n  border: 1px solid rgba(0, 0, 0, 0.1);\r\n  &:hover {\r\n    fill: blue;\r\n    cursor: pointer;\r\n    transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n`;\r\n\r\nconst ContactWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 40px;\r\n  color: rgb(1, 1, 1);\r\n  background-color: aliceblue;\r\n  width: 500px;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  margin: 20px auto;\r\n`;\r\n\r\nexport { WrapperTitle, TitleMain, TitleList, CloseButton, ContactWrapper };\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useState, useEffect } from 'react';\r\nimport { nanoid } from 'nanoid';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport ContactForm from '../contactForm';\r\nimport ContactList from '../contactList';\r\nimport Filter from '../filter';\r\nimport Modal from '../modal/Modal';\r\nimport {\r\n  WrapperTitle,\r\n  TitleMain,\r\n  TitleList,\r\n  CloseButton,\r\n  ContactWrapper,\r\n} from './ContactsGroup.styled';\r\n// import { selectContacts } from '../redux/contacts/selectors';\r\n// import { getContacts } from '../redux/selectors';\r\nimport {\r\n  addContact,\r\n  editContact,\r\n  fetchContacts,\r\n} from '../../redux/contacts/operations';\r\nimport {\r\n  selectError,\r\n  selectLoading,\r\n  selectContacts,\r\n} from '../../redux/contacts/selectors';\r\n// import { getError, getIsLoading } from '../redux/selectors';\r\n\r\nfunction ContactsGroup() {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectLoading);\r\n  const error = useSelector(selectError);\r\n  const [id, setId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [showModal, setShowModal] = useState(false);\r\n  const contacts = useSelector(selectContacts);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const validateExistContact = ({ contacts, values }) => {\r\n    const messages = [];\r\n    if (contacts.some(contact => contact.number === values.number)) {\r\n      const user = contacts.find(\r\n        contact => contact.number === values.number\r\n      ).name;\r\n      messages.push(`${values.number} is already belongs to ${user}!`);\r\n    }\r\n    if (contacts.some(contact => contact.name === values.name)) {\r\n      const phone = contacts.find(\r\n        contact => contact.name === values.name\r\n      ).number;\r\n      messages.push(\r\n        `${values.name} is already containce in phonebook with phone ${phone}!`\r\n      );\r\n    }\r\n    if (messages.length && !showModal) {\r\n      alert(messages.join('\\n'));\r\n    }\r\n    return !!messages.length;\r\n  };\r\n\r\n  const handleSubmit = (values, actions) => {\r\n    if (\r\n      validateExistContact({\r\n        contacts,\r\n        values,\r\n      }) &&\r\n      !showModal\r\n    ) {\r\n      return;\r\n    }\r\n    if (id) {\r\n      dispatch(\r\n        editContact({\r\n          id,\r\n          name: values.name,\r\n          number: values.number,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        addContact({\r\n          id: nanoid(),\r\n          name: values.name,\r\n          number: values.number,\r\n        })\r\n      );\r\n    }\r\n    setId('');\r\n    setShowModal(false);\r\n    actions.resetForm({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  const onContactEdit = id => {\r\n    const currentContact = contacts.find(contact => contact.id === id);\r\n    setShowModal(!showModal);\r\n    setId(currentContact.id);\r\n    setName(currentContact.name);\r\n    setNumber(currentContact.number);\r\n  };\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ContactWrapper>\r\n      {showModal && (\r\n        <Modal onClose={toggleModal}>\r\n          <CloseButton onClick={toggleModal}>\r\n            <CloseIcon />\r\n          </CloseButton>\r\n          <ContactForm\r\n            contact={{\r\n              name,\r\n              number,\r\n            }}\r\n            handleSubmit={(values, actions) => handleSubmit(values, actions)}\r\n          />\r\n        </Modal>\r\n      )}\r\n      <div>\r\n        {!showModal && (\r\n          <>\r\n            <WrapperTitle>\r\n              <TitleMain>Phonebook</TitleMain>\r\n            </WrapperTitle>\r\n            <ContactForm\r\n              handleSubmit={(values, actions) => handleSubmit(values, actions)}\r\n            />\r\n          </>\r\n        )}\r\n        {isLoading && !error && <b>Request in progress...</b>}\r\n        <WrapperTitle>\r\n          <TitleList>Contacts</TitleList>\r\n        </WrapperTitle>\r\n        <Filter />\r\n        <ContactList onContactEdit={id => onContactEdit(id)} />\r\n      </div>\r\n    </ContactWrapper>\r\n  );\r\n}\r\n\r\nexport default ContactsGroup;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n// import { Helmet } from 'react-helmet';\r\nimport { fetchContacts } from '../redux/contacts/operations';\r\nimport { ContactList } from '../components/contactList/ContactList';\r\nimport ContactsGroup from '../components/contactsGroup';\r\nimport {\r\n  selectError,\r\n  selectLoading,\r\n  selectContacts,\r\n} from '../redux/contacts/selectors';\r\n\r\nexport default function ContactPage() {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector(selectLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {/* <Helmet> */}\r\n      <div>\r\n        <title>Your contacts</title>\r\n      </div>\r\n      {/* </Helmet> */}\r\n      {/* <ContactEitor /> */}\r\n      <ContactsGroup />\r\n      <div>{isLoading && 'Request in progress...'}</div>\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\n"],"names":["Li","styled","_templateObject","_taggedTemplateLiteral","Ul","_templateObject2","Paragraph","_templateObject3","DeleteButton","DeleteIcon","_templateObject4","EditButton","EditIcon","_templateObject5","selectContacts","state","contacts","items","selectLoading","isLoading","selectError","error","selectFilter","filter","ContactList","props","_filterData$filter","dispatch","useDispatch","onContactEdit","useSelector","filterData","_jsx","children","contact","name","toLowerCase","includes","number","map","_jsxs","concat","Tooltip","title","IconButton","type","onClick","id","color","deleteContact","CompleteForm","Form","Label","Input","Field","Button","schema","yup","shape","required","handleSubmit","Formik","initialValues","onSubmit","validationSchema","autoComplete","htmlFor","pattern","FindName","_Fragment","onChange","event","setFilter","target","value","Backdrop","ModalContent","ModalPhoneBook","modalRoot","document","querySelector","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","onClose","createPortal","currentTarget","WrapperTitle","TitleMain","TitleList","CloseButton","CloseIcon","ContactWrapper","_useState","useState","_useState2","_slicedToArray","setId","_useState3","_useState4","setName","_useState5","_useState6","setNumber","_useState7","_useState8","showModal","setShowModal","fetchContacts","toggleModal","values","actions","_ref","messages","some","user","find","push","phone","length","alert","join","validateExistContact","editContact","addContact","nanoid","resetForm","Modal","ContactForm","Filter","currentContact","ContactPage","ContactsGroup"],"sourceRoot":""}